name: main
on: [push]

jobs:
  build-and-test:
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2


    - name: cythonize and pip
      run: |
        eval "$(conda shell.bash hook)"
        conda create -p ./cython-env -y cython
        conda activate ./cython-env
        python setup.py clean cythonize sdist
        (cd dist && pip install pybedtools-*.tar.gz && cd $TMPDIR && python -c 'import pybedtools; print(pybedtools.__file__)')
        conda deactivate


    - name: conda env and install locally
      run: |
        eval "$(conda shell.bash hook)"
        conda create -y -p ./test-env --channel conda-forge --channel bioconda python=${{ matrix.python-version }} --file requirements.txt --file test-requirements.txt --file optional-requirements.txt
        conda activate ./test-env
        HERE=$(pwd)
        mkdir -p /tmp/pybedtools-uncompressed
        cd /tmp/pybedtools-uncompressed
        tar -xf $HERE/dist/pybedtools-*.tar.gz
        cd pybedtools-*
        pip install -e .

    - name: tests
        eval "$(conda shell.bash hook)"
        conda activate ./test-env
        HERE=$(pwd)
        pytest -v --doctest-modules
        pytest -v pybedtools/test/genomepy_integration.py
        cp -r $HERE/docs .
        (cd docs && make clean doctest)

    - name: git setup
      # Set up git and export env vars to be used in later steps.
      #   Note the unconventional mechanism for exporting envs by appending to
      #   $GITHUB_ENV.
      id: git-setup
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
        echo "WORKDIR=$(pwd)" >> $GITHUB_ENV
